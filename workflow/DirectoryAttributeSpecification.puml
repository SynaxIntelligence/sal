
@startuml

!theme _none_
top to bottom direction
skinparam linetype ortho

annotation Data << annotation >> {
  + staticConstructor(): String
}
class DirectoryAttributeSpecification {
  - directoryDataId: Long
  - directoryAttributeFind: DirectoryAttributeFind
  - log: Logger
  - attributeCode: String
  - directoryId: Long
  - directoryAttributes: List<DirectoryAttributeDto>
  + getDirectoryId(): Long
  + getDirectoryDataId(): Long
  + hashCode(): int
  + builder(): DirectoryAttributeSpecificationBuilder<?, ?>
  # canEqual(Object): boolean
  + getAttributeCode(): String
  + getDirectoryAttributeFind(): DirectoryAttributeFind
  + toString(): String
  + getDirectoryAttributes(): List<DirectoryAttributeDto>
  + setDirectoryId(Long): void
  + setDirectoryDataId(Long): void
  + setAttributeCode(String): void
  + equals(Object): boolean
  + setDirectoryAttributeFind(DirectoryAttributeFind): void
  + setDirectoryAttributes(List<DirectoryAttributeDto>): void
  - filterDirectoryDataQuery(Root<DirectoryAttribute>, CriteriaBuilder, Predicate): Predicate
  - filterRequired(Root<DirectoryAttribute>, CriteriaBuilder, Predicate): Predicate
  + toPredicate(Root<DirectoryAttribute>, CriteriaQuery<?>, CriteriaBuilder): Predicate
  + setDirectoryDataReference(Root<DirectoryAttribute>, CriteriaBuilder, Predicate, LocalDate): Predicate
  - filterAttributeCode(Root<DirectoryAttribute>, CriteriaBuilder, Predicate): Predicate
  - filterDirectoryAttributes(Root<DirectoryAttribute>, CriteriaBuilder, Predicate): Predicate
}
class DirectoryAttributeSpecificationCommon {
  # checkFromDate(Root<DirectoryAttribute>, CriteriaBuilder, Predicate, LocalDate): Predicate
  + equals(Object): boolean
  # canEqual(Object): boolean
  + hashCode(): int
  + toString(): String
}
interface Serializable << interface >>
annotation Slf4j << annotation >> {
  + topic(): String
}
interface Specification<T> << interface >> {
  + serialVersionUID: long
  + not(Specification<T>?): Specification<T>
  + and(Specification<T>?): Specification<T>
  + where(Specification<T>?): Specification<T>
  + toPredicate(Root<T>, CriteriaQuery<?>, CriteriaBuilder): Predicate?
  + or(Specification<T>?): Specification<T>
}
annotation SuperBuilder << annotation >> {
  + buildMethodName(): String
  + toBuilder(): boolean
  + setterPrefix(): String
  + builderMethodName(): String
}

DirectoryAttributeSpecification        -[#999900,dotted]-  Data                                  
DirectoryAttributeSpecification        -[#000082,plain]-^  DirectoryAttributeSpecificationCommon 
DirectoryAttributeSpecification        -[#999900,dotted]-  Slf4j                                 
DirectoryAttributeSpecification        -[#008200,dashed]-^  Specification                         
DirectoryAttributeSpecification        -[#999900,dotted]-  SuperBuilder                          
DirectoryAttributeSpecificationCommon  -[#999900,dotted]-  Data                                  
DirectoryAttributeSpecificationCommon  -[#999900,dotted]-  SuperBuilder                          
Specification                          -[#008200,plain]-^  Serializable                          
@enduml
